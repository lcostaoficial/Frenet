@model Frenet.Application.Models.ViewModel.ShippingQuoteVm

<div class="flex-row">
    <div class="col-12 pt-3">
        <div class="card card-default">
            <div class="card-body">
                <form id="form-quote" asp-action="Quote" asp-controller="Shipping" method="post">
                    <h4>Realizar cotação</h4>
                    <hr />
                    <div class="row">

                        <div class="col-sm-12">
                            <button type="button" class="btn btn-primary float-right" onclick="Quote.History()">
                                <em class="fas fa-eye"></em> Consultar histórico de cotação
                            </button>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label asp-for="SellerCEP" class="control-label"></label> <span title="Campo obrigatório" style="color: red">(Obrigatório)</span>
                                <input asp-for="SellerCEP" class="form-control" />
                                <span asp-validation-for="SellerCEP" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label asp-for="RecipientCEP" class="control-label"></label> <span title="Campo obrigatório" style="color: red">(Obrigatório)</span>
                                <input asp-for="RecipientCEP" class="form-control" />
                                <span asp-validation-for="RecipientCEP" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label asp-for="ShipmentInvoiceValue" class="control-label"></label> <span title="Campo obrigatório" style="color: red">(Obrigatório)</span>
                                <input asp-for="ShipmentInvoiceValue" class="form-control" />
                                <span asp-validation-for="ShipmentInvoiceValue" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label asp-for="ShippingServiceCode" class="control-label"></label> <span title="Campo obrigatório" style="color: red">(Obrigatório)</span>
                                <select asp-for="ShippingServiceCode" class="form-control" asp-items="ViewBag.Services">
                                    <option selected>Nenhum</option>
                                </select>
                                <span asp-validation-for="ShippingServiceCode" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Itens de envio </h3> <span title="Campo obrigatório" style="color: red">(Obrigatório)</span>
                            <div class="card-tools">
                                <button type="button" class="btn btn-primary float-left" onclick="$('#modal-item-envio').modal('show')">
                                    <em class="fas fa-plus"></em> Adicionar itens
                                </button>
                            </div>
                        </div>

                        <div id="conteudo-itens" class="card-body table-responsive p-0">
                            @await Html.PartialAsync("_ListaDeItensDeEnvio")
                        </div>

                    </div>

                    <div class="form-group col-12">
                        <button type="submit" class="btn btn-success float-right">
                            Realizar cotação
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(function () {

            "use strict"

            window.Quote = window.Quote || {};

            Quote.Itens = "[]";

            Quote.Load = function () {
                Swal.fire({
                    html: '<h3><div class="spinner-border"></div></h3> Aguarde...',
                    showConfirmButton: false,
                    allowOutsideClick: false
                });
            };

            Quote.LoadStop = function () {
                Swal.close();
            };

            Quote.History = function () {

                Quote.Load();

                let sellerCEP = $("#SellerCEP").val();

                $.ajax({
                    method: "GET",
                    url: "/Shipping/QuoteHistory",
                    data: { sellerCEP: sellerCEP },
                    dataType: "json",
                    success: function success(result) {
                        Quote.LoadStop();

                        if (result.error) {
                            Swal.fire("Falha", result.error, "error");
                        }
                        else {

                            Quote.HistoryModal(result.contentList);
                        }
                    },
                    error: function (xhr) {
                        Quote.LoadStop();
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");

                    }
                });
            };

            Quote.HistoryModal = function (modelResult) {

                $.ajax({
                    method: "GET",
                    url: "/Shipping/HistoryModal",
                    data: { contentJson: modelResult },
                    dataType: "html",
                    success: function success(result) {
                        $("#modal-historico-cotacao-conteudo").html(result);
                        $("#modal-historico-cotacao").modal("show");
                    },
                    error: function (xhr) {
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");
                    }
                });
            };

            Quote.LoadResult = function (modelResult) {
                
                $.ajax({
                    method: "GET",
                    url: "/Shipping/QuoteResult",
                    data: { contentJson: JSON.stringify(modelResult) },
                    dataType: "html",
                    success: function success(result) {
                        $("#modal-resultado-cotacao-conteudo").html(result);
                        $("#modal-resultado-cotacao").modal("show");
                    },
                    error: function (xhr) {
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");
                    }
                });
            };

            Quote.Result = function () {

                Quote.Load();

                let formData = new FormData($("#form-quote")[0]);

                formData.append("ContentJson", Quote.Itens);

                $.ajax({
                    method: "POST",
                    url: "/Shipping/Quote",
                    data: formData,
                    processData: false,
                    contentType: false,
                    dataType: "json",
                    success: function success(result) {
                        Quote.LoadStop();

                        if (result.error) {
                            Swal.fire("Falha", result.error, "error");
                        }
                        else {
                            Quote.LoadResult(result.response);
                        }
                    },
                    error: function (xhr) {
                        Quote.LoadStop();
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");

                    }
                });

            };

            Quote.AtualizarItens = function () {

                $.ajax({
                    method: "GET",
                    url: "/Shipping/AtualizarItens",
                    data: { contentJson: Quote.Itens },
                    dataType: "html",
                    success: function success(result) {
                        if (result.error) {
                            Swal.fire('Falha', result.error, 'error');
                        }
                        else {
                            $("#conteudo-itens").html(result);
                            $("#modal-item-envio").modal("hide");
                        }
                    },
                    error: function (xhr) {
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");

                    }
                });
            };

            Quote.AdicionarItem = function () {

                let formData = new FormData($("#form-item")[0]);

                formData.append("ContentJson", Quote.Itens);

                $.ajax({
                    method: "POST",
                    url: "/Shipping/AdicionarItem",
                    data: formData,
                    processData: false,
                    contentType: false,
                    dataType: "json",
                    success: function success(result) {
                        if (result.error) {
                            Swal.fire("Falha", result.error, "error");
                        }
                        else {
                            Quote.Itens = result.contentList;
                            Quote.AtualizarItens();
                        }
                    },
                    error: function (xhr) {
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");

                    }
                });
            };

            Quote.RemoverItemDeEnvio = function (index) {
                $.ajax({
                    method: "GET",
                    url: "/Shipping/RemoverItem",
                    data: { index: index, contentJson: Quote.Itens },
                    dataType: "json",
                    success: function success(result) {

                        if (result.error) {
                            Swal.fire("Falha", result.error, "error");
                        }
                        else {
                            Quote.Itens = result.contentList;
                            Quote.AtualizarItens();
                        }
                    },
                    error: function (xhr) {
                        Swal.fire("Falha", "Request Status: " + xhr.status + " Status Text: " + xhr.statusText + " " + xhr.responseText, "error");
                    }
                });
            };

            Quote.Eventos = function () {
                $(".modal").on("hidden.bs.modal", function () {
                    $(this).find("form").trigger("reset");
                });

                $('#form-quote').on('submit', function (event) {
                    event.preventDefault();
                    Quote.Result();
                });
            }

            Quote.Eventos();

        });

    </script>
}

@section Modals {
    <div class="modal fade" id="modal-item-envio">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item de Envio</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @await Html.PartialAsync("_ItemDeEnvio")
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" onclick="Quote.AdicionarItem()">Adicionar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-resultado-cotacao">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Resultado da cotação</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="modal-resultado-cotacao-conteudo" class="modal-body">
                    
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-historico-cotacao">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Resultado da cotação</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div id="modal-historico-cotacao-conteudo" class="modal-body">
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
}      